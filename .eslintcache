[{"C:\\Users\\Uch\\it-incubator\\transforming-counter\\src\\index.tsx":"1","C:\\Users\\Uch\\it-incubator\\transforming-counter\\src\\store\\counterReducer.ts":"2","C:\\Users\\Uch\\it-incubator\\transforming-counter\\src\\components\\CounterDisplay\\CounterDisplay.tsx":"3","C:\\Users\\Uch\\it-incubator\\transforming-counter\\src\\App.tsx":"4","C:\\Users\\Uch\\it-incubator\\transforming-counter\\src\\components\\CounterSetting\\CounterSetting.tsx":"5","C:\\Users\\Uch\\it-incubator\\transforming-counter\\src\\reportWebVitals.ts":"6","C:\\Users\\Uch\\it-incubator\\transforming-counter\\src\\components\\common\\Input.tsx":"7","C:\\Users\\Uch\\it-incubator\\transforming-counter\\src\\components\\common\\Button.tsx":"8"},{"size":575,"mtime":1613250958392,"results":"9","hashOfConfig":"10"},{"size":3206,"mtime":1612291927188,"results":"11","hashOfConfig":"10"},{"size":1613,"mtime":1613775240966,"results":"12","hashOfConfig":"10"},{"size":1915,"mtime":1612990179958,"results":"13","hashOfConfig":"10"},{"size":1902,"mtime":1612820453337,"results":"14","hashOfConfig":"10"},{"size":425,"mtime":1609627975743,"results":"15","hashOfConfig":"10"},{"size":766,"mtime":1613775397003,"results":"16","hashOfConfig":"10"},{"size":484,"mtime":1612291927157,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1pn36qv",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Uch\\it-incubator\\transforming-counter\\src\\index.tsx",[],"C:\\Users\\Uch\\it-incubator\\transforming-counter\\src\\store\\counterReducer.ts",[],"C:\\Users\\Uch\\it-incubator\\transforming-counter\\src\\components\\CounterDisplay\\CounterDisplay.tsx",["37"],"\r\nimport React, { useState } from 'react';\r\nimport Button from '../common/Button';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootStateType } from '../../store/store';\r\nimport style from './../../style/counter.module.css';\r\n\r\n\r\nexport default function CounterDisplay(props: PropsType) {\r\n\r\n  const { incButtonHandler, recButtonHandler, text, backToSet } = props\r\n  const { counterMaxValue, value, counterIsActive, error } = useSelector((state: RootStateType) => state.counter)\r\n\r\n  const [disableBtn,  setDisableBTN ] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <div className={style.counterWrapper} >\r\n        <div className={(value === counterMaxValue) ? style.counterDisplayError : style.counterDisplay}>\r\n          {counterIsActive ? value : text}\r\n        </div>\r\n        <div className={style.counterBottom}>\r\n\r\n        <Button title={'SET'}\r\n            onClick={backToSet}\r\n            disabled={(value === counterMaxValue || error || counterIsActive === false ? true : false)} />\r\n\r\n          <Button title={'INC'}\r\n            onClick={incButtonHandler}\r\n            disabled={(value === counterMaxValue || error || counterIsActive === false || disableBtn===true ? true : false)} />\r\n\r\n          <Button title={'RESET'}\r\n            onClick= { () => { recButtonHandler(); setDisableBTN(true) }} \r\n            disabled={(value != counterMaxValue || error || disableBtn===true ? true : false)} />\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\n//types\r\ntype PropsType = {\r\n  text: string,\r\n  incButtonHandler: () => void,\r\n  recButtonHandler: () => void,\r\n  backToSet: () => void;\r\n}\r\n","C:\\Users\\Uch\\it-incubator\\transforming-counter\\src\\App.tsx",["38","39"],"C:\\Users\\Uch\\it-incubator\\transforming-counter\\src\\components\\CounterSetting\\CounterSetting.tsx",["40","41","42","43"],"\r\nimport Input from '../common/Input';\r\nimport Button from '../common/Button';\r\nimport { RootStateType } from '../../store/store';\r\nimport style from './../../style/counter.module.css';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { actionCreators } from '../../store/counterReducer';\r\nimport React, { ChangeEvent, useEffect, useState } from 'react';\r\n\r\n\r\ntype PropsType = {\r\n    onmaxValue: (e: string) => void,\r\n    onstartValue: (e: string) => void,\r\n    onSetValues: () => void,\r\n}\r\n\r\nfunction CounterSetting(props: PropsType) {\r\n\r\n    const {onmaxValue, onstartValue, onSetValues} = props\r\n\r\n    const dispatch = useDispatch();\r\n    const [text, setText] = useState('');\r\n    const { counterStartValue, counterMaxValue, value, error } = useSelector((state: RootStateType) => state.counter);\r\n\r\n    useEffect(() => {\r\n        (error) ? setText('Invalid values') : setText('enter values & press \"set\"')\r\n    }, [error]);\r\n\r\n    return (\r\n        <>\r\n            <div className={style.counterWrapper}>\r\n                <div className={style.counterDisplay}>\r\n                    <Input title='max value:'\r\n                        value={counterMaxValue}\r\n                        onChange={(e: ChangeEvent<HTMLInputElement>) => { onmaxValue(e.currentTarget.value) }}\r\n                        error={error} />\r\n                    <Input title='max value:'\r\n                        value={counterStartValue}\r\n                        onChange={(e: ChangeEvent<HTMLInputElement>) => { onstartValue(e.currentTarget.value) }}\r\n                        error={error} />\r\n                </div>\r\n                <div className={style.counterBottom}>\r\n                    <Button title={'SET'}\r\n                        onClick={onSetValues}\r\n                        disabled={error} />\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default CounterSetting; \r\n","C:\\Users\\Uch\\it-incubator\\transforming-counter\\src\\reportWebVitals.ts",[],"C:\\Users\\Uch\\it-incubator\\transforming-counter\\src\\components\\common\\Input.tsx",["44"],"import { ChangeEvent, DetailedHTMLProps, InputHTMLAttributes } from 'react';\r\nimport style from './../../style/Input.module.css'\r\n\r\n\r\ntype PropsInputType =\r\n    DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n    & {\r\n        value: string | number,\r\n        onChange: (e: ChangeEvent<HTMLInputElement>) => void,\r\n        error?: boolean\r\n    };\r\n\r\nfunction Input(props: PropsInputType) {\r\n\r\n    const { error, title, value, onChange, ...restProps } = props;\r\n\r\n    return (\r\n        <label>\r\n            {title}\r\n            <input className={error ? style.errorInput : style.input}\r\n                type='number'\r\n                value={value}\r\n                onChange={onChange} />\r\n        </label>\r\n    )\r\n}\r\n\r\nexport default Input;","C:\\Users\\Uch\\it-incubator\\transforming-counter\\src\\components\\common\\Button.tsx",[],{"ruleId":"45","severity":1,"message":"46","line":34,"column":30,"nodeType":"47","messageId":"48","endLine":34,"endColumn":32},{"ruleId":"49","severity":1,"message":"50","line":19,"column":30,"nodeType":"51","messageId":"52","endLine":19,"endColumn":45},{"ruleId":"49","severity":1,"message":"53","line":19,"column":47,"nodeType":"51","messageId":"52","endLine":19,"endColumn":52},{"ruleId":"49","severity":1,"message":"54","line":7,"column":10,"nodeType":"51","messageId":"52","endLine":7,"endColumn":24},{"ruleId":"49","severity":1,"message":"55","line":21,"column":11,"nodeType":"51","messageId":"52","endLine":21,"endColumn":19},{"ruleId":"49","severity":1,"message":"56","line":22,"column":12,"nodeType":"51","messageId":"52","endLine":22,"endColumn":16},{"ruleId":"49","severity":1,"message":"53","line":23,"column":49,"nodeType":"51","messageId":"52","endLine":23,"endColumn":54},{"ruleId":"49","severity":1,"message":"57","line":15,"column":47,"nodeType":"51","messageId":"52","endLine":15,"endColumn":56},"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","@typescript-eslint/no-unused-vars","'counterMaxValue' is assigned a value but never used.","Identifier","unusedVar","'value' is assigned a value but never used.","'actionCreators' is defined but never used.","'dispatch' is assigned a value but never used.","'text' is assigned a value but never used.","'restProps' is assigned a value but never used."]